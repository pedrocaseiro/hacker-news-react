{"version":3,"sources":["styles/palette.js","styles/globals.js","store/app/actions.js","store/app/reducer.js","services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","store/story/selectors.js","components/App/styles.js","styles/mediaQueries.js","utils/getSiteHostname.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/Loader/styles.js","components/Loader/index.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js"],"names":["colorsDark","background","backgroundSecondary","text","textSecondary","border","setGlobalStyles","injectGlobal","_templateObject","actionTypes","SET_THEME","concat","app","state","arguments","length","undefined","theme","_ref","type","payload","Object","objectSpread","API_ROOT","process","URL","TIMEOUT","HEADERS","Content-Type","Accept","client","ApiService","_ref$baseURL","baseURL","_ref$timeout","timeout","_ref$headers","headers","auth","classCallCheck","this","axios","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","path","get","then","data","post","put","patch","delete","hackerNewsApi","getTopStoryIds","getStory","id","getStoriesByPage","ids","page","_getPageSlice","limit","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","all","NS","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","actions","fetchStoryIds","dispatch","storyIds","fetchStories","catch","err","stories","story","isFetching","toConsumableArray","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","apply","configureStore","initialState","createStore","reducer","hasMoreStoriesSelector","createSelector","Wrapper","styled","div","styles_templateObject","Title","h1","_templateObject2","props","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","li","ListItem_styles_templateObject","h3","styles_templateObject2","_ref2","Host","span","_templateObject3","_ref3","ExternalLink","a","_templateObject4","_ref4","Description","_templateObject5","_ref5","CommentLink","_templateObject6","_ref6","_ref7","LINK_REL","timeago","Timeago","ListItem","by","_ref$kids","kids","score","title","time","site","link","userUrl","react_default","createElement","href","rel","target","styles_Title","format","Date","toISOString","ListWrapper","ul","List_styles_templateObject","List","components_ListItem","assign","key","blink","keyframes","Loader_styles_templateObject","Animation","Loader_styles_templateObject2","Loader","App","_this$props","_this","fetchStoriesFirstPage","_this$props2","hasMoreStories","styled_components_browser_esm","lib_default","dataLength","next","hasMore","loader","components_Loader","style","height","overflow","components_List","Component","connect","Boolean","window","location","match","store","ReactDOM","render","es","components_App","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e4fa858.chunk.js","sourcesContent":["export const colorsDark = {\n  background: '#272727',\n  backgroundSecondary: '#393C3E',\n  text: '#bfbebe',\n  textSecondary: '#848886',\n  border: '#272727',\n};\n\nexport const colorsLight = {\n  background: '#EAEAEA',\n  backgroundSecondary: '#F8F8F8',\n  text: '#848886',\n  textSecondary: '#aaaaaa',\n  border: '#EAEAEA',\n};\n","import { injectGlobal } from 'styled-components';\nimport { colorsDark } from './palette';\n\nconst setGlobalStyles = () =>\n  injectGlobal`\n    * {\n      box-sizing: border-box;\n    }\n    html, body {\n      font-family: Lato,Helvetica-Neue,Helvetica,Arial,sans-serif;\n      width: 100vw;\n      overflow-x: hidden;\n      margin: 0;\n      padding: 0;\n      min-height: 100vh;\n      background-color: ${colorsDark.background};\n    }\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n    a {\n      text-decoration: none;\n      &:visited {\n        color: inherit;\n      }\n    }\n  `;\n\nexport default setGlobalStyles;\n","const NS = '@hnClone/app';\n\nexport const actionTypes = {\n  SET_THEME: `${NS}/SET_THEME`,\n};\n\nconst actions = {\n  setTheme: (payload = {}) => ({ type: actionTypes.SET_THEME, payload }),\n};\n\nexport default actions;\n","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n  theme: 'dark',\n});\n\nconst app = (state = getInitialState(), { type, payload }) => {\n  switch(type) {\n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        ...payload,\n      }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import axios from 'axios';\n\n// Default API will be your root\nconst API_ROOT = process.env.URL || 'http://localhost:3000/';\nconst TIMEOUT = 20000;\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\nclass ApiService {\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\n    const client = axios.create({\n      baseURL,\n      timeout,\n      headers,\n      auth,\n    });\n\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.client = client;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(path) {\n    return this.client.get(path).then(response => response.data);\n  }\n\n  post(path, payload) {\n    return this.client.post(path, payload).then(response => response.data);\n  }\n\n  put(path, payload) {\n    return this.client.put(path, payload).then(response => response.data);\n  }\n\n  patch(path, payload) {\n    return this.client.patch(path, payload).then(response => response.data);\n  }\n\n  delete(path) {\n    return this.client.delete(path).then(response => response.data);\n  }\n}\n\nexport default ApiService;\n","import ApiService from './Api';\n\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\nconst JSON_QUERY = '.json?print=pretty';\nconst PAGE_LIMIT = 20;\n\nconst client = new ApiService({ baseURL: BASE_URL });\nconst hackerNewsApi = {};\n\nconst getPageSlice = (limit, page = 0) => ({begin: page * limit, end: (page + 1) * limit});\nconst getPageValues = ({begin, end, items}) => items.slice(begin, end);\n\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\n\nhackerNewsApi.getStoriesByPage = (ids, page) => {\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\n  const activeIds = getPageValues({begin, end, items: ids});\n  const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\n  return Promise.all(storyPromises);\n};\n\nexport default hackerNewsApi;\n","import hackerNewsApi from 'services/hackerNewsApi';\n\nconst NS = '@hnClone/story';\n\nexport const actionTypes = {\n  FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\n  FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\n  FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\n  FETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\n  FETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\n  FETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`\n};\n\nconst action = (type, payload) => ({type, payload});\n\nconst actions = {\n  fetchStoryIds: (payload = {}) => {\n    return dispatch => {\n      dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST), payload);\n\n      return hackerNewsApi\n      \t.getTopStoryIds()\n        .then(storyIds => {\n          // dispatch success after getting the story ids\n          dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS), { storyIds }); \n\n          // fetch the first page of stories\n          dispatch(actions.fetchStories({ storyIds, page: 0 }));\n          return storyIds;\n        })\n        .catch(err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)));\n    }\n  },\n  fetchStories: (payload = {}) => {\n    return dispatch => {\n      dispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\n      const { storyIds, page } = payload;\n      return hackerNewsApi\n        .getStoriesByPage(storyIds, page)\n        .then(stories => dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories })))\n        .catch(err => dispatch(action(actionTypes.FETCH_STORIES_FAILURE, err)));\n    };\n  }\n};\n\nexport default actions;\n","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n  storyIds: [],\n  stories: [],\n  page: 0,\n  isFetching: false,\n  error: '',\n});\n\nconst story = (state = getInitialState(), { type, payload }) => {\n  switch(type) {\n    case actionTypes.FETCH_STORY_IDS_REQUEST:\n    case actionTypes.FETCH_STORIES_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case actionTypes.FETCH_STORY_IDS_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n      };\n    case actionTypes.FETCH_STORIES_SUCCESS:\n      return {\n        ...state,\n        stories: [...state.stories, ...payload.stories],\n        page: state.page + 1,\n        isFetching: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default story;\n","import { combineReducers } from 'redux';\nimport app from './app/reducer';\nimport story from './story/reducer';\n\nconst rootReducer = combineReducers({\n  app,\n  story\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst middlewareList = [];\n\nmiddlewareList.push(thunk);\n\nif(!isProd) {\n  const logger = createLogger({});\n  middlewareList.push(logger);\n}\n\nconst middleware = compose(applyMiddleware(...middlewareList));\n\nexport default middleware;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst configureStore = initialState => {\n  const store = createStore(reducer, initialState, middleware);\n  return store;\n}\n\nexport default configureStore;\n","import { createSelector } from 'reselect';\n\nconst storyIdsSelector = state => state.story.storyIds;\nconst storiesSelector = state => state.story.stories; \n\nexport const hasMoreStoriesSelector = createSelector(\n  storyIdsSelector,\n  storiesSelector,\n  (storyIds, stories) => storyIds.length > stories.length\n);\n","import styled from 'styled-components';\nimport { tablet } from 'styles/mediaQueries';\n\nexport const Wrapper = styled.div`\n  width: 85%;\n  margin-left: auto;\n  margin-right: auto;\n  height: 100%;\n  overflow: hidden;\n  paddig-bottom: 200px;\n\n  ${tablet} {\n    width: 96%;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.textSecondary};\n  font-size: 20px;\n  font-weight: 300;\n  margin-top: 24px;\n  margin-bottom: 26px;\n`\n","export const mobile = '@media only screen and (max-with: 480px)';\nexport const tablet = '@media only screen and (max-with: 768px)';\n","import url from 'url';\n\nconst getSiteHostname = siteUrl => {\n  let hostname = '';\n\n  if (siteUrl) {\n    if (!siteUrl.includes('//')) {\n      siteUrl = `http://${siteUrl}`;\n    }\n\n    hostname = url.parse(siteUrl).hostname;\n  }\n\n  if (hostname.includes('www.')) {\n    hostname = hostname.split('www.')[1];\n  }\n\n  return hostname;\n};\n\nexport default getSiteHostname;\n","const HN_ROOT = 'https://news.ycombinator.com';\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\nexport const HN_USER = `${HN_ROOT}/user?id=`;\n\nconst getArticleLink = ({ url, id }) => {\n  const commentUrl = `${HN_ITEM}${id}`;\n  const link = !!url ? url : commentUrl;\n  return link;\n};\n\nexport default getArticleLink;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  padding: 14px 24px;\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${({ theme }) => theme.text};\n  margin-top: 0;\n  margin-bottom: 6px;\n  font-weight: 400;\n  font-size: 16px;\n  letter-spacing: 0.4px;\n`;\n\nexport const Host = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 12px;\n`;\n\nexport const ExternalLink = styled.a`\n  color: ${({ theme }) => theme.text};\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nexport const Description = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSecondary};\n`;\n\nexport const CommentLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary};\n  &:visited {\n    color: ${({ theme }) => theme.textSecondary};\n  }\n`;\n","import React from 'react';\nimport Timeago from 'timeago.js';\nimport getSiteHostname from 'utils/getSiteHostname';\nimport getArticleLink, { HN_USER, HN_ITEM } from 'utils/getArticleLink';\n\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from './styles';\n\nconst LINK_REL = 'noopener noreferrer nofollow';\nconst timeago = Timeago();\n\nconst ListItem = ({ by, kids = [], score, url, title, id, type, time }) => {\n\tconst site = getSiteHostname(url) || 'news.ycombinator.com';\n\tconst link = getArticleLink({ url, id });\n\tconst commentUrl = `${HN_ITEM}${id}`;\n\tconst userUrl = `${HN_USER}${by}`;\n  return (\n    <Item>\n      <ExternalLink href={link} rel={LINK_REL} target=\"_blank\">\n        <Title>\n        \t{title} <Host>({site})</Host>\n        </Title>\n      </ExternalLink>\n      <Description>\n        {score} points by{' '}  \n        <CommentLink href={userUrl} rel={LINK_REL} target=\"_blank\">\n        \t{by}{' '}\n        </CommentLink>\n        \t{timeago.format(new Date(time * 1000).toISOString())} {' | '}\n        <CommentLink href={commentUrl} rel={LINK_REL} target=\"_blank\">\n        \t{kids.length} comments\n        </CommentLink>\n      </Description>\n    </Item>\n  )\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.ul`\n  background-color: ${props => props.theme.backgroundSecondary};\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport ListItem from 'components/ListItem';\n\nimport { ListWrapper } from './styles';\n\nconst List = ({ stories }) => {\n  return (\n    <ListWrapper>\n      { stories.map(story => <ListItem {...story} key={story.id} />) }\n    </ListWrapper>\n  )\n};\n\nexport default List;\n","import styled, { keyframes} from 'styled-components';\n\nconst blink = keyframes`\n  0% {\n    opacity: .2;\n  }\n\n  20% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: .2;\n  }\n`;\n\nexport const Animation = styled.div`\n  text-align: center;\n\n  span {\n    color: ${({ theme }) => theme.textSecondary};\n    display: inline-block;\n    margin-left: 4px;\n    margin-right: 4px;\n    font-size: 80px;\n    line-height: 0.1px;\n    animation-name: ${blink}\n    animation-duration: 1s;\n    animation-iteration-count: infinite;\n    animation-fill-mode: both;\n  }\n\n  span:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n\n  span:nth-child(3) {\n    animation-delay: 0.4s;\n  }\n`;\n","import React from 'react';\nimport { Animation } from './styles';\n\nconst Loader = () => (\n  <Animation>\n    <span>.</span>\n    <span>.</span>\n    <span>.</span>\n  </Animation>\n);\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ThemeProvider } from 'styled-components';\nimport { colorsDark } from 'styles/palette';\nimport { Wrapper, Title } from './styles';\nimport List from 'components/List';\nimport Loader from 'components/Loader';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchStoriesFirstPage();\n  };\n\n  fetchStories = () => {\n\t\tconst { storyIds, page, fetchStories, isFetching } = this.props;\n\t\tif (!isFetching) {\n\t\t\tfetchStories({ storyIds, page });\n\t\t}\n  }\n\n  render() {\n    const { stories, hasMoreStories } = this.props;\n    return (\n      <ThemeProvider theme={colorsDark}>\n        <div>\n          <Wrapper>\n            <Title>Hacker News Reader</Title>\n            <InfiniteScroll\n           \t\tdataLength={stories.length}\n           \t\tnext={this.fetchStories}\n           \t\thasMore={hasMoreStories}\n           \t\tloader={<Loader />}\n           \t\tstyle={{\n           \t\t\theight: '100%',\n           \t\t\toverflow: 'visible'\n           \t\t}}\n            >\n            \t<List stories={stories}/>\n            </InfiniteScroll>\n          </Wrapper>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport actions from 'store/story/actions';\nimport { hasMoreStoriesSelector } from 'store/story/selectors';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  stories: state.story.stories,\n  page: state.story.page,\n  storyIds: state.story.storyIds,\n  isFetching: state.story.isFetching,\n  hasMoreStories: hasMoreStoriesSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n  fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page }))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport setGlobalStyles from 'styles/globals';\nimport { Provider } from 'react-redux';\nimport configureStore from 'store';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nsetGlobalStyles();\n\nconst renderApp = () => {\n  const initialState = {};\n  const store = configureStore(initialState);\n\n  store.dispatch({ type: '@hnClone/@@INIT' });\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n}\n\nrenderApp();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}